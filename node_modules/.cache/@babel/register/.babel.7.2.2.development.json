{
  "{\"sourceRoot\":\"/media/ynwa/Volume/Work/Andela/server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/ynwa/Volume/Work/Andela\",\"filename\":\"/media/ynwa/Volume/Work/Andela/server/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/ynwa/Volume/Work/Andela\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/ynwa/Volume/Work/Andela/server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/ynwa/Volume/Work/Andela",
      "filename": "/media/ynwa/Volume/Work/Andela/server/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/ynwa/Volume/Work/Andela",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/ynwa/Volume/Work/Andela/server/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/media/ynwa/Volume/Work/Andela/server/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/ynwa/Volume/Work/Andela/server",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _partyRoute = _interopRequireDefault(require(\"./routes/partyRoute\"));\n\nvar _officeRoute = _interopRequireDefault(require(\"./routes/officeRoute\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar app = (0, _express.default)();\nvar PORT = process.env.PORT || 3000;\napp.use((0, _morgan.default)('short'));\napp.use(_express.default.json());\napp.use(_express.default.urlencoded({\n  extended: true\n}));\napp.use(_officeRoute.default);\napp.use(_partyRoute.default);\napp.use('/api/v1', function (req, res) {\n  return res.status(400).send({\n    status: res.statusCode,\n    message: 'Bad URL format. Please check your URL for error'\n  });\n});\nif (process.env.NODE_ENV !== 'test') app.listen(PORT);\nvar _default = app;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsIlBPUlQiLCJwcm9jZXNzIiwiZW52IiwidXNlIiwiZXhwcmVzcyIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJvZmZpY2VSb3V0ZSIsInBhcnR5Um91dGUiLCJyZXEiLCJyZXMiLCJzdGF0dXMiLCJzZW5kIiwic3RhdHVzQ29kZSIsIm1lc3NhZ2UiLCJOT0RFX0VOViIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLHVCQUFaO0FBQ0EsSUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWixJQUFvQixJQUFqQztBQUVBRCxHQUFHLENBQUNJLEdBQUosQ0FBUSxxQkFBTyxPQUFQLENBQVI7QUFDQUosR0FBRyxDQUFDSSxHQUFKLENBQVFDLGlCQUFRQyxJQUFSLEVBQVI7QUFDQU4sR0FBRyxDQUFDSSxHQUFKLENBQVFDLGlCQUFRRSxVQUFSLENBQW1CO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQW5CLENBQVI7QUFFQVIsR0FBRyxDQUFDSSxHQUFKLENBQVFLLG9CQUFSO0FBQ0FULEdBQUcsQ0FBQ0ksR0FBSixDQUFRTSxtQkFBUjtBQUVBVixHQUFHLENBQUNJLEdBQUosQ0FBUSxTQUFSLEVBQW1CLFVBQUNPLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3BERCxJQUFBQSxNQUFNLEVBQUVELEdBQUcsQ0FBQ0csVUFEd0M7QUFFcERDLElBQUFBLE9BQU8sRUFBRTtBQUYyQyxHQUFyQixDQUFkO0FBQUEsQ0FBbkI7QUFLQSxJQUFJZCxPQUFPLENBQUNDLEdBQVIsQ0FBWWMsUUFBWixLQUF5QixNQUE3QixFQUFxQ2pCLEdBQUcsQ0FBQ2tCLE1BQUosQ0FBV2pCLElBQVg7ZUFFdEJELEciLCJzb3VyY2VSb290IjoiL21lZGlhL3lud2EvVm9sdW1lL1dvcmsvQW5kZWxhL3NlcnZlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nO1xuaW1wb3J0IHBhcnR5Um91dGUgZnJvbSAnLi9yb3V0ZXMvcGFydHlSb3V0ZSc7XG5pbXBvcnQgb2ZmaWNlUm91dGUgZnJvbSAnLi9yb3V0ZXMvb2ZmaWNlUm91dGUnO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xuXG5hcHAudXNlKG1vcmdhbignc2hvcnQnKSk7XG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcbmFwcC51c2UoZXhwcmVzcy51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuXG5hcHAudXNlKG9mZmljZVJvdXRlKTtcbmFwcC51c2UocGFydHlSb3V0ZSk7XG5cbmFwcC51c2UoJy9hcGkvdjEnLCAocmVxLCByZXMpID0+IHJlcy5zdGF0dXMoNDAwKS5zZW5kKHtcbiAgc3RhdHVzOiByZXMuc3RhdHVzQ29kZSxcbiAgbWVzc2FnZTogJ0JhZCBVUkwgZm9ybWF0LiBQbGVhc2UgY2hlY2sgeW91ciBVUkwgZm9yIGVycm9yJyxcbn0pKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAndGVzdCcpIGFwcC5saXN0ZW4oUE9SVCk7XG5cbmV4cG9ydCBkZWZhdWx0IGFwcDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "PORT",
        "process",
        "env",
        "use",
        "express",
        "json",
        "urlencoded",
        "extended",
        "officeRoute",
        "partyRoute",
        "req",
        "res",
        "status",
        "send",
        "statusCode",
        "message",
        "NODE_ENV",
        "listen"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,uBAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAD,GAAG,CAACI,GAAJ,CAAQ,qBAAO,OAAP,CAAR;AACAJ,GAAG,CAACI,GAAJ,CAAQC,iBAAQC,IAAR,EAAR;AACAN,GAAG,CAACI,GAAJ,CAAQC,iBAAQE,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AAEAR,GAAG,CAACI,GAAJ,CAAQK,oBAAR;AACAT,GAAG,CAACI,GAAJ,CAAQM,mBAAR;AAEAV,GAAG,CAACI,GAAJ,CAAQ,SAAR,EAAmB,UAACO,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACpDD,IAAAA,MAAM,EAAED,GAAG,CAACG,UADwC;AAEpDC,IAAAA,OAAO,EAAE;AAF2C,GAArB,CAAd;AAAA,CAAnB;AAKA,IAAId,OAAO,CAACC,GAAR,CAAYc,QAAZ,KAAyB,MAA7B,EAAqCjB,GAAG,CAACkB,MAAJ,CAAWjB,IAAX;eAEtBD,G",
      "sourceRoot": "/media/ynwa/Volume/Work/Andela/server",
      "sourcesContent": [
        "import express from 'express';\nimport morgan from 'morgan';\nimport partyRoute from './routes/partyRoute';\nimport officeRoute from './routes/officeRoute';\n\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\napp.use(morgan('short'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\napp.use(officeRoute);\napp.use(partyRoute);\n\napp.use('/api/v1', (req, res) => res.status(400).send({\n  status: res.statusCode,\n  message: 'Bad URL format. Please check your URL for error',\n}));\n\nif (process.env.NODE_ENV !== 'test') app.listen(PORT);\n\nexport default app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550017114131
  },
  "{\"sourceRoot\":\"/media/ynwa/Volume/Work/Andela/server/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/ynwa/Volume/Work/Andela\",\"filename\":\"/media/ynwa/Volume/Work/Andela/server/routes/partyRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/ynwa/Volume/Work/Andela\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/ynwa/Volume/Work/Andela",
      "filename": "/media/ynwa/Volume/Work/Andela/server/routes/partyRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/ynwa/Volume/Work/Andela",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/ynwa/Volume/Work/Andela/server/routes/partyRoute.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/media/ynwa/Volume/Work/Andela/server/routes/partyRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/routes",
        "sourceFileName": "partyRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _partyController = _interopRequireDefault(require(\"../controllers/partyController\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar route = _express.default.Router();\n\nroute.post('/api/v1/parties/', _partyController.default.createPoliticalParty);\nroute.get('/api/v1/parties/', _partyController.default.getAllPoliticalParty);\nroute.get('/api/v1/parties/:id', _partyController.default.getSinglePoliticalParty);\nroute.patch('/api/v1/parties/:id/name', _partyController.default.editPoliticalParty);\nroute.delete('/api/v1/parties/:id', _partyController.default.deletePoliticalParty);\nvar _default = route;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnR5Um91dGUuanMiXSwibmFtZXMiOlsicm91dGUiLCJleHByZXNzIiwiUm91dGVyIiwicG9zdCIsInBhcnR5Q29udHJvbGxlciIsImNyZWF0ZVBvbGl0aWNhbFBhcnR5IiwiZ2V0IiwiZ2V0QWxsUG9saXRpY2FsUGFydHkiLCJnZXRTaW5nbGVQb2xpdGljYWxQYXJ0eSIsInBhdGNoIiwiZWRpdFBvbGl0aWNhbFBhcnR5IiwiZGVsZXRlIiwiZGVsZXRlUG9saXRpY2FsUGFydHkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVBLElBQU1BLEtBQUssR0FBR0MsaUJBQVFDLE1BQVIsRUFBZDs7QUFFQUYsS0FBSyxDQUFDRyxJQUFOLENBQVcsa0JBQVgsRUFBK0JDLHlCQUFnQkMsb0JBQS9DO0FBQ0FMLEtBQUssQ0FBQ00sR0FBTixDQUFVLGtCQUFWLEVBQThCRix5QkFBZ0JHLG9CQUE5QztBQUNBUCxLQUFLLENBQUNNLEdBQU4sQ0FBVSxxQkFBVixFQUFpQ0YseUJBQWdCSSx1QkFBakQ7QUFDQVIsS0FBSyxDQUFDUyxLQUFOLENBQVksMEJBQVosRUFBd0NMLHlCQUFnQk0sa0JBQXhEO0FBQ0FWLEtBQUssQ0FBQ1csTUFBTixDQUFhLHFCQUFiLEVBQW9DUCx5QkFBZ0JRLG9CQUFwRDtlQUVlWixLIiwic291cmNlUm9vdCI6Ii9tZWRpYS95bndhL1ZvbHVtZS9Xb3JrL0FuZGVsYS9zZXJ2ZXIvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgcGFydHlDb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL3BhcnR5Q29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGUucG9zdCgnL2FwaS92MS9wYXJ0aWVzLycsIHBhcnR5Q29udHJvbGxlci5jcmVhdGVQb2xpdGljYWxQYXJ0eSk7XG5yb3V0ZS5nZXQoJy9hcGkvdjEvcGFydGllcy8nLCBwYXJ0eUNvbnRyb2xsZXIuZ2V0QWxsUG9saXRpY2FsUGFydHkpO1xucm91dGUuZ2V0KCcvYXBpL3YxL3BhcnRpZXMvOmlkJywgcGFydHlDb250cm9sbGVyLmdldFNpbmdsZVBvbGl0aWNhbFBhcnR5KTtcbnJvdXRlLnBhdGNoKCcvYXBpL3YxL3BhcnRpZXMvOmlkL25hbWUnLCBwYXJ0eUNvbnRyb2xsZXIuZWRpdFBvbGl0aWNhbFBhcnR5KTtcbnJvdXRlLmRlbGV0ZSgnL2FwaS92MS9wYXJ0aWVzLzppZCcsIHBhcnR5Q29udHJvbGxlci5kZWxldGVQb2xpdGljYWxQYXJ0eSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "partyRoute.js"
      ],
      "names": [
        "route",
        "express",
        "Router",
        "post",
        "partyController",
        "createPoliticalParty",
        "get",
        "getAllPoliticalParty",
        "getSinglePoliticalParty",
        "patch",
        "editPoliticalParty",
        "delete",
        "deletePoliticalParty"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,KAAK,GAAGC,iBAAQC,MAAR,EAAd;;AAEAF,KAAK,CAACG,IAAN,CAAW,kBAAX,EAA+BC,yBAAgBC,oBAA/C;AACAL,KAAK,CAACM,GAAN,CAAU,kBAAV,EAA8BF,yBAAgBG,oBAA9C;AACAP,KAAK,CAACM,GAAN,CAAU,qBAAV,EAAiCF,yBAAgBI,uBAAjD;AACAR,KAAK,CAACS,KAAN,CAAY,0BAAZ,EAAwCL,yBAAgBM,kBAAxD;AACAV,KAAK,CAACW,MAAN,CAAa,qBAAb,EAAoCP,yBAAgBQ,oBAApD;eAEeZ,K",
      "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/routes",
      "sourcesContent": [
        "import express from 'express';\nimport partyController from '../controllers/partyController';\n\nconst route = express.Router();\n\nroute.post('/api/v1/parties/', partyController.createPoliticalParty);\nroute.get('/api/v1/parties/', partyController.getAllPoliticalParty);\nroute.get('/api/v1/parties/:id', partyController.getSinglePoliticalParty);\nroute.patch('/api/v1/parties/:id/name', partyController.editPoliticalParty);\nroute.delete('/api/v1/parties/:id', partyController.deletePoliticalParty);\n\nexport default route;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1549998034153
  },
  "{\"sourceRoot\":\"/media/ynwa/Volume/Work/Andela/server/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/ynwa/Volume/Work/Andela\",\"filename\":\"/media/ynwa/Volume/Work/Andela/server/controllers/partyController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/ynwa/Volume/Work/Andela\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/ynwa/Volume/Work/Andela",
      "filename": "/media/ynwa/Volume/Work/Andela/server/controllers/partyController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/ynwa/Volume/Work/Andela",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/ynwa/Volume/Work/Andela/server/controllers/partyController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/media/ynwa/Volume/Work/Andela/server/controllers/partyController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/controllers",
        "sourceFileName": "partyController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _joi = _interopRequireDefault(require(\"joi\"));\n\nvar _partySampleData = _interopRequireDefault(require(\"../data/partySampleData\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar PoliticalParty =\n/*#__PURE__*/\nfunction () {\n  function PoliticalParty() {\n    _classCallCheck(this, PoliticalParty);\n  }\n\n  _createClass(PoliticalParty, null, [{\n    key: \"createPoliticalParty\",\n    value: function createPoliticalParty(req, res) {\n      var _req$body = req.body,\n          name = _req$body.name,\n          hqAddress = _req$body.hqAddress,\n          logoUrl = _req$body.logoUrl,\n          representative = _req$body.representative,\n          contact = _req$body.contact,\n          website = _req$body.website;\n\n      var schema = _joi.default.object().keys({\n        name: _joi.default.string().min(3).max(50).required(),\n        hqAddress: _joi.default.string().min(3).max(50).required(),\n        logoUrl: _joi.default.string().min(3).max(500).required(),\n        representative: _joi.default.string().min(3).max(50).required(),\n        contact: _joi.default.string().regex(/^(07)(\\d{8})/).length(10).required(),\n        website: _joi.default.string().min(3).max(50).required()\n      });\n\n      var validation = _joi.default.validate(req.body, schema, {\n        abortEarly: false\n      });\n\n      if (validation.error != null) {\n        var errors = [];\n\n        for (var i = 0; i < validation.error.details.length; i++) {\n          errors.push(validation.error.details[i].message.split('\"').join(''));\n        }\n\n        return res.status(400).send({\n          status: res.statusCode,\n          error: errors\n        });\n      }\n\n      var party = {\n        id: _partySampleData.default.length + 1,\n        name: name,\n        hqAddress: hqAddress,\n        logoUrl: logoUrl,\n        representative: representative,\n        contact: contact,\n        website: website,\n        created_at: new Date()\n      };\n\n      var record = _partySampleData.default.find(function (item) {\n        return item.website === website;\n      });\n\n      if (record != undefined) {\n        return res.status(400).send({\n          status: res.statusCode,\n          error: 'This party is already registered'\n        });\n      }\n\n      _partySampleData.default.push(party);\n\n      return res.status(201).send({\n        status: res.statusCode,\n        data: [party]\n      });\n    }\n  }, {\n    key: \"getAllPoliticalParty\",\n    value: function getAllPoliticalParty(req, res) {\n      return res.status(200).send({\n        status: res.statusCode,\n        data: _partySampleData.default\n      });\n    }\n  }, {\n    key: \"getSinglePoliticalParty\",\n    value: function getSinglePoliticalParty(req, res) {\n      var id = req.params.id;\n\n      if (!parseInt(id)) {\n        return res.status(400).send({\n          status: res.statusCode,\n          error: 'ID should be an Integer value'\n        });\n      }\n\n      var record = _partySampleData.default.filter(function (item) {\n        return item.id === parseInt(id);\n      });\n\n      if (record === undefined) {\n        return res.status(404).send({\n          status: res.statusCode,\n          error: 'No information found for provided id'\n        });\n      }\n\n      return res.status(200).send({\n        status: res.statusCode,\n        data: record\n      });\n    }\n  }, {\n    key: \"editPoliticalParty\",\n    value: function editPoliticalParty(req, res) {\n      var id = req.params.id;\n      var name = req.body.name;\n\n      if (!parseInt(id)) {\n        return res.status(400).send({\n          status: res.statusCode,\n          error: 'ID should be an Integer value'\n        });\n      }\n\n      var schema = _joi.default.object().keys({\n        name: _joi.default.string().min(3).max(50).required()\n      });\n\n      var validation = _joi.default.validate(req.body, schema, {\n        abortEarly: false\n      });\n\n      if (validation.error != null) {\n        var errors = [];\n\n        for (var i = 0; i < validation.error.details.length; i++) {\n          errors.push(validation.error.details[i].message.split('\"').join(''));\n        }\n\n        return res.status(400).send({\n          status: res.statusCode,\n          error: errors\n        });\n      }\n\n      var index = _partySampleData.default.findIndex(function (item) {\n        return item.id === parseInt(id);\n      });\n\n      if (index === -1) {\n        return res.status(404).send({\n          status: res.statusCode,\n          error: 'No information found for provided id'\n        });\n      }\n\n      _partySampleData.default[index].name = name;\n      return res.status(200).send({\n        status: res.statusCode,\n        data: [_partySampleData.default[index]]\n      });\n    }\n  }, {\n    key: \"deletePoliticalParty\",\n    value: function deletePoliticalParty(req, res) {\n      var id = req.params.id;\n\n      if (!parseInt(id)) {\n        return res.status(400).send({\n          status: res.statusCode,\n          error: 'ID should be an Integer value'\n        });\n      }\n\n      var index = _partySampleData.default.findIndex(function (item) {\n        return item.id === parseInt(id);\n      });\n\n      if (index === -1) {\n        return res.status(404).send({\n          status: res.statusCode,\n          error: 'No information found for provided id'\n        });\n      }\n\n      _partySampleData.default.splice(index, 1);\n\n      return res.status(200).send({\n        status: res.statusCode,\n        data: [{\n          message: 'Party deleted successfuly'\n        }]\n      });\n    }\n  }]);\n\n  return PoliticalParty;\n}();\n\nvar _default = PoliticalParty;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnR5Q29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJQb2xpdGljYWxQYXJ0eSIsInJlcSIsInJlcyIsImJvZHkiLCJuYW1lIiwiaHFBZGRyZXNzIiwibG9nb1VybCIsInJlcHJlc2VudGF0aXZlIiwiY29udGFjdCIsIndlYnNpdGUiLCJzY2hlbWEiLCJqb2kiLCJvYmplY3QiLCJrZXlzIiwic3RyaW5nIiwibWluIiwibWF4IiwicmVxdWlyZWQiLCJyZWdleCIsImxlbmd0aCIsInZhbGlkYXRpb24iLCJ2YWxpZGF0ZSIsImFib3J0RWFybHkiLCJlcnJvciIsImVycm9ycyIsImkiLCJkZXRhaWxzIiwicHVzaCIsIm1lc3NhZ2UiLCJzcGxpdCIsImpvaW4iLCJzdGF0dXMiLCJzZW5kIiwic3RhdHVzQ29kZSIsInBhcnR5IiwiaWQiLCJwYXJ0eURhdGEiLCJjcmVhdGVkX2F0IiwiRGF0ZSIsInJlY29yZCIsImZpbmQiLCJpdGVtIiwidW5kZWZpbmVkIiwiZGF0YSIsInBhcmFtcyIsInBhcnNlSW50IiwiZmlsdGVyIiwiaW5kZXgiLCJmaW5kSW5kZXgiLCJzcGxpY2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7OztJQUVNQSxjOzs7Ozs7Ozs7eUNBQ3dCQyxHLEVBQUtDLEcsRUFBSztBQUFBLHNCQVFoQ0QsR0FBRyxDQUFDRSxJQVI0QjtBQUFBLFVBRWxDQyxJQUZrQyxhQUVsQ0EsSUFGa0M7QUFBQSxVQUdsQ0MsU0FIa0MsYUFHbENBLFNBSGtDO0FBQUEsVUFJbENDLE9BSmtDLGFBSWxDQSxPQUprQztBQUFBLFVBS2xDQyxjQUxrQyxhQUtsQ0EsY0FMa0M7QUFBQSxVQU1sQ0MsT0FOa0MsYUFNbENBLE9BTmtDO0FBQUEsVUFPbENDLE9BUGtDLGFBT2xDQSxPQVBrQzs7QUFVcEMsVUFBTUMsTUFBTSxHQUFHQyxhQUFJQyxNQUFKLEdBQWFDLElBQWIsQ0FBa0I7QUFDL0JULFFBQUFBLElBQUksRUFBRU8sYUFBSUcsTUFBSixHQUFhQyxH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RDRCLEdBQ3JCbEMsR0FBRyxDQUFDMkMsTUFEaUIsQ0FDNUJULEVBRDRCOztBQUdwQyxVQUFJLENBQUNVLFFBQVEsQ0FBQ1YsRUFBRCxDQUFiLEVBQW1CO0FBQ2pCLGVBQU9qQyxHQUFHLENBQUM2QixNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJELFVBQUFBLE1BQU0sRUFBRTdCLEdBQUcsQ0FBQytCLFVBRGM7QUFFMUJWLFVBQUFBLEtBQUssRUFBRTtBQUZtQixTQUFyQixDQUFQO0FBSUQ7O0FBRUQsVUFBTXdCLEtBQUssR0FBR1gseUJBQVVZLFNBQVYsQ0FBb0IsVUFBQVAsSUFBSTtBQUFBLGVBQUlBLElBQUksQ0FBQ04sRUFBTCxLQUFZVSxRQUFRLENBQUNWLEVBQUQsQ0FBeEI7QUFBQSxPQUF4QixDQUFkOztBQUNBLFVBQUlZLEtBQUssS0FBSyxDQUFDLENBQWYsRUFBa0I7QUFDaEIsZUFBTzdDLEdBQUcsQ0FBQzZCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMxQkQsVUFBQUEsTUFBTSxFQUFFN0IsR0FBRyxDQUFDK0IsVUFEYztBQUUxQlYsVUFBQUEsS0FBSyxFQUFFO0FBRm1CLFNBQXJCLENBQVA7QUFJRDs7QUFFRGEsK0JBQVVhLE1BQVYsQ0FBaUJGLEtBQWpCLEVBQXdCLENBQXhCOztBQUNBLGFBQU83QyxHQUFHLENBQUM2QixNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJELFFBQUFBLE1BQU0sRUFBRTdCLEdBQUcsQ0FBQytCLFVBRGM7QUFFMUJVLFFBQUFBLElBQUksRUFBRSxDQUFDO0FBQ0xmLFVBQUFBLE9BQU8sRUFBRTtBQURKLFNBQUQ7QUFGb0IsT0FBckIsQ0FBUDtBQU1EOzs7Ozs7ZUFHWTVCLGMiLCJzb3VyY2VSb290IjoiL21lZGlhL3lud2EvVm9sdW1lL1dvcmsvQW5kZWxhL3NlcnZlci9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBqb2kgZnJvbSAnam9pJztcbmltcG9ydCBwYXJ0eURhdGEgZnJvbSAnLi4vZGF0YS9wYXJ0eVNhbXBsZURhdGEnO1xuXG5jbGFzcyBQb2xpdGljYWxQYXJ0eSB7XG4gIHN0YXRpYyBjcmVhdGVQb2xpdGljYWxQYXJ0eShyZXEsIHJlcykge1xuICAgIGNvbnN0IHtcbiAgICAgIG5hbWUsXG4gICAgICBocUFkZHJlc3MsXG4gICAgICBsb2dvVXJsLFxuICAgICAgcmVwcmVzZW50YXRpdmUsXG4gICAgICBjb250YWN0LFxuICAgICAgd2Vic2l0ZSxcbiAgICB9ID0gcmVxLmJvZHk7XG5cbiAgICBjb25zdCBzY2hlbWEgPSBqb2kub2JqZWN0KCkua2V5cyh7XG4gICAgICBuYW1lOiBqb2kuc3RyaW5nKCkubWluKDMpLm1heCg1MCkucmVxdWlyZWQoKSxcbiAgICAgIGhxQWRkcmVzczogam9pLnN0cmluZygpLm1pbigzKS5tYXgoNTApLnJlcXVpcmVkKCksXG4gICAgICBsb2dvVXJsOiBqb2kuc3RyaW5nKCkubWluKDMpLm1heCg1MDApLnJlcXVpcmVkKCksXG4gICAgICByZXByZXNlbnRhdGl2ZTogam9pLnN0cmluZygpLm1pbigzKS5tYXgoNTApLnJlcXVpcmVkKCksXG4gICAgICBjb250YWN0OiBqb2kuc3RyaW5nKCkucmVnZXgoL14oMDcpKFxcZHs4fSkvKS5sZW5ndGgoMTApLnJlcXVpcmVkKCksXG4gICAgICB3ZWJzaXRlOiBqb2kuc3RyaW5nKCkubWluKDMpLm1heCg1MCkucmVxdWlyZWQoKSxcbiAgICB9KTtcblxuICAgIGNvbnN0IHZhbGlkYXRpb24gPSBqb2kudmFsaWRhdGUocmVxLmJvZHksIHNjaGVtYSwge1xuICAgICAgYWJvcnRFYXJseTogZmFsc2UsXG4gICAgfSk7XG5cbiAgICBpZiAodmFsaWRhdGlvbi5lcnJvciAhPSBudWxsKSB7XG4gICAgICBjb25zdCBlcnJvcnMgPSBbXTtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmFsaWRhdGlvbi5lcnJvci5kZXRhaWxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKHZhbGlkYXRpb24uZXJyb3IuZGV0YWlsc1tpXS5tZXNzYWdlLnNwbGl0KCdcIicpLmpvaW4oJycpKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZCh7XG4gICAgICAgIHN0YXR1czogcmVzLnN0YXR1c0NvZGUsXG4gICAgICAgIGVycm9yOiBlcnJvcnMsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBwYXJ0eSA9IHtcbiAgICAgIGlkOiBwYXJ0eURhdGEubGVuZ3RoICsgMSxcbiAgICAgIG5hbWUsXG4gICAgICBocUFkZHJlc3MsXG4gICAgICBsb2dvVXJsLFxuICAgICAgcmVwcmVzZW50YXRpdmUsXG4gICAgICBjb250YWN0LFxuICAgICAgd2Vic2l0ZSxcbiAgICAgIGNyZWF0ZWRfYXQ6IG5ldyBEYXRlKCksXG4gICAgfTtcblxuICAgIGNvbnN0IHJlY29yZCA9IHBhcnR5RGF0YS5maW5kKGl0ZW0gPT4gaXRlbS53ZWJzaXRlID09PSB3ZWJzaXRlKTtcbiAgICBpZiAocmVjb3JkICE9IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHtcbiAgICAgICAgc3RhdHVzOiByZXMuc3RhdHVzQ29kZSxcbiAgICAgICAgZXJyb3I6ICdUaGlzIHBhcnR5IGlzIGFscmVhZHkgcmVnaXN0ZXJlZCcsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBwYXJ0eURhdGEucHVzaChwYXJ0eSk7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAxKS5zZW5kKHtcbiAgICAgIHN0YXR1czogcmVzLnN0YXR1c0NvZGUsXG4gICAgICBkYXRhOiBbcGFydHldLFxuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGdldEFsbFBvbGl0aWNhbFBhcnR5KHJlcSwgcmVzKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHtcbiAgICAgIHN0YXR1czogcmVzLnN0YXR1c0NvZGUsXG4gICAgICBkYXRhOiBwYXJ0eURhdGEsXG4gICAgfSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0U2luZ2xlUG9saXRpY2FsUGFydHkocmVxLCByZXMpIHtcbiAgICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xuXG4gICAgaWYgKCFwYXJzZUludChpZCkpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZCh7XG4gICAgICAgIHN0YXR1czogcmVzLnN0YXR1c0NvZGUsXG4gICAgICAgIGVycm9yOiAnSUQgc2hvdWxkIGJlIGFuIEludGVnZXIgdmFsdWUnLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgcmVjb3JkID0gcGFydHlEYXRhLmZpbHRlcihpdGVtID0+IGl0ZW0uaWQgPT09IHBhcnNlSW50KGlkKSk7XG4gICAgaWYgKHJlY29yZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLnNlbmQoe1xuICAgICAgICBzdGF0dXM6IHJlcy5zdGF0dXNDb2RlLFxuICAgICAgICBlcnJvcjogJ05vIGluZm9ybWF0aW9uIGZvdW5kIGZvciBwcm92aWRlZCBpZCcsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLnNlbmQoe1xuICAgICAgc3RhdHVzOiByZXMuc3RhdHVzQ29kZSxcbiAgICAgIGRhdGE6IHJlY29yZCxcbiAgICB9KTtcbiAgfVxuXG4gIHN0YXRpYyBlZGl0UG9saXRpY2FsUGFydHkocmVxLCByZXMpIHtcbiAgICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xuICAgIGNvbnN0IHtcbiAgICAgIG5hbWUsXG4gICAgfSA9IHJlcS5ib2R5O1xuXG4gICAgaWYgKCFwYXJzZUludChpZCkpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZCh7XG4gICAgICAgIHN0YXR1czogcmVzLnN0YXR1c0NvZGUsXG4gICAgICAgIGVycm9yOiAnSUQgc2hvdWxkIGJlIGFuIEludGVnZXIgdmFsdWUnLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3Qgc2NoZW1hID0gam9pLm9iamVjdCgpLmtleXMoe1xuICAgICAgbmFtZTogam9pLnN0cmluZygpLm1pbigzKS5tYXgoNTApLnJlcXVpcmVkKCksXG4gICAgfSk7XG4gICAgY29uc3QgdmFsaWRhdGlvbiA9IGpvaS52YWxpZGF0ZShyZXEuYm9keSwgc2NoZW1hLCB7XG4gICAgICBhYm9ydEVhcmx5OiBmYWxzZSxcbiAgICB9KTtcblxuICAgIGlmICh2YWxpZGF0aW9uLmVycm9yICE9IG51bGwpIHtcbiAgICAgIGNvbnN0IGVycm9ycyA9IFtdO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB2YWxpZGF0aW9uLmVycm9yLmRldGFpbHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgZXJyb3JzLnB1c2godmFsaWRhdGlvbi5lcnJvci5kZXRhaWxzW2ldLm1lc3NhZ2Uuc3BsaXQoJ1wiJykuam9pbignJykpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHtcbiAgICAgICAgc3RhdHVzOiByZXMuc3RhdHVzQ29kZSxcbiAgICAgICAgZXJyb3I6IGVycm9ycyxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IGluZGV4ID0gcGFydHlEYXRhLmZpbmRJbmRleChpdGVtID0+IGl0ZW0uaWQgPT09IHBhcnNlSW50KGlkKSk7XG4gICAgaWYgKGluZGV4ID09PSAtMSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5zZW5kKHtcbiAgICAgICAgc3RhdHVzOiByZXMuc3RhdHVzQ29kZSxcbiAgICAgICAgZXJyb3I6ICdObyBpbmZvcm1hdGlvbiBmb3VuZCBmb3IgcHJvdmlkZWQgaWQnLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcGFydHlEYXRhW2luZGV4XS5uYW1lID0gbmFtZTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLnNlbmQoe1xuICAgICAgc3RhdHVzOiByZXMuc3RhdHVzQ29kZSxcbiAgICAgIGRhdGE6IFtwYXJ0eURhdGFbaW5kZXhdXSxcbiAgICB9KTtcbiAgfVxuXG4gIHN0YXRpYyBkZWxldGVQb2xpdGljYWxQYXJ0eShyZXEsIHJlcykge1xuICAgIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XG5cbiAgICBpZiAoIXBhcnNlSW50KGlkKSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHtcbiAgICAgICAgc3RhdHVzOiByZXMuc3RhdHVzQ29kZSxcbiAgICAgICAgZXJyb3I6ICdJRCBzaG91bGQgYmUgYW4gSW50ZWdlciB2YWx1ZScsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBpbmRleCA9IHBhcnR5RGF0YS5maW5kSW5kZXgoaXRlbSA9PiBpdGVtLmlkID09PSBwYXJzZUludChpZCkpO1xuICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuc2VuZCh7XG4gICAgICAgIHN0YXR1czogcmVzLnN0YXR1c0NvZGUsXG4gICAgICAgIGVycm9yOiAnTm8gaW5mb3JtYXRpb24gZm91bmQgZm9yIHByb3ZpZGVkIGlkJyxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHBhcnR5RGF0YS5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZCh7XG4gICAgICBzdGF0dXM6IHJlcy5zdGF0dXNDb2RlLFxuICAgICAgZGF0YTogW3tcbiAgICAgICAgbWVzc2FnZTogJ1BhcnR5IGRlbGV0ZWQgc3VjY2Vzc2Z1bHknLFxuICAgICAgfV0sXG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9saXRpY2FsUGFydHk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "partyController.js"
      ],
      "names": [
        "PoliticalParty",
        "req",
        "res",
        "body",
        "name",
        "hqAddress",
        "logoUrl",
        "representative",
        "contact",
        "website",
        "schema",
        "joi",
        "object",
        "keys",
        "string",
        "min",
        "max",
        "required",
        "regex",
        "length",
        "validation",
        "validate",
        "abortEarly",
        "error",
        "errors",
        "i",
        "details",
        "push",
        "message",
        "split",
        "join",
        "status",
        "send",
        "statusCode",
        "party",
        "id",
        "partyData",
        "created_at",
        "Date",
        "record",
        "find",
        "item",
        "undefined",
        "data",
        "params",
        "parseInt",
        "filter",
        "index",
        "findIndex",
        "splice"
      ],
      "mappings": "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",
      "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/controllers",
      "sourcesContent": [
        "import joi from 'joi';\nimport partyData from '../data/partySampleData';\n\nclass PoliticalParty {\n  static createPoliticalParty(req, res) {\n    const {\n      name,\n      hqAddress,\n      logoUrl,\n      representative,\n      contact,\n      website,\n    } = req.body;\n\n    const schema = joi.object().keys({\n      name: joi.string().min(3).max(50).required(),\n      hqAddress: joi.string().min(3).max(50).required(),\n      logoUrl: joi.string().min(3).max(500).required(),\n      representative: joi.string().min(3).max(50).required(),\n      contact: joi.string().regex(/^(07)(\\d{8})/).length(10).required(),\n      website: joi.string().min(3).max(50).required(),\n    });\n\n    const validation = joi.validate(req.body, schema, {\n      abortEarly: false,\n    });\n\n    if (validation.error != null) {\n      const errors = [];\n      for (let i = 0; i < validation.error.details.length; i++) {\n        errors.push(validation.error.details[i].message.split('\"').join(''));\n      }\n      return res.status(400).send({\n        status: res.statusCode,\n        error: errors,\n      });\n    }\n\n    const party = {\n      id: partyData.length + 1,\n      name,\n      hqAddress,\n      logoUrl,\n      representative,\n      contact,\n      website,\n      created_at: new Date(),\n    };\n\n    const record = partyData.find(item => item.website === website);\n    if (record != undefined) {\n      return res.status(400).send({\n        status: res.statusCode,\n        error: 'This party is already registered',\n      });\n    }\n\n    partyData.push(party);\n    return res.status(201).send({\n      status: res.statusCode,\n      data: [party],\n    });\n  }\n\n  static getAllPoliticalParty(req, res) {\n    return res.status(200).send({\n      status: res.statusCode,\n      data: partyData,\n    });\n  }\n\n  static getSinglePoliticalParty(req, res) {\n    const { id } = req.params;\n\n    if (!parseInt(id)) {\n      return res.status(400).send({\n        status: res.statusCode,\n        error: 'ID should be an Integer value',\n      });\n    }\n\n    const record = partyData.filter(item => item.id === parseInt(id));\n    if (record === undefined) {\n      return res.status(404).send({\n        status: res.statusCode,\n        error: 'No information found for provided id',\n      });\n    }\n\n    return res.status(200).send({\n      status: res.statusCode,\n      data: record,\n    });\n  }\n\n  static editPoliticalParty(req, res) {\n    const { id } = req.params;\n    const {\n      name,\n    } = req.body;\n\n    if (!parseInt(id)) {\n      return res.status(400).send({\n        status: res.statusCode,\n        error: 'ID should be an Integer value',\n      });\n    }\n\n    const schema = joi.object().keys({\n      name: joi.string().min(3).max(50).required(),\n    });\n    const validation = joi.validate(req.body, schema, {\n      abortEarly: false,\n    });\n\n    if (validation.error != null) {\n      const errors = [];\n      for (let i = 0; i < validation.error.details.length; i++) {\n        errors.push(validation.error.details[i].message.split('\"').join(''));\n      }\n      return res.status(400).send({\n        status: res.statusCode,\n        error: errors,\n      });\n    }\n\n    const index = partyData.findIndex(item => item.id === parseInt(id));\n    if (index === -1) {\n      return res.status(404).send({\n        status: res.statusCode,\n        error: 'No information found for provided id',\n      });\n    }\n\n    partyData[index].name = name;\n    return res.status(200).send({\n      status: res.statusCode,\n      data: [partyData[index]],\n    });\n  }\n\n  static deletePoliticalParty(req, res) {\n    const { id } = req.params;\n\n    if (!parseInt(id)) {\n      return res.status(400).send({\n        status: res.statusCode,\n        error: 'ID should be an Integer value',\n      });\n    }\n\n    const index = partyData.findIndex(item => item.id === parseInt(id));\n    if (index === -1) {\n      return res.status(404).send({\n        status: res.statusCode,\n        error: 'No information found for provided id',\n      });\n    }\n\n    partyData.splice(index, 1);\n    return res.status(200).send({\n      status: res.statusCode,\n      data: [{\n        message: 'Party deleted successfuly',\n      }],\n    });\n  }\n}\n\nexport default PoliticalParty;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550059345965
  },
  "{\"sourceRoot\":\"/media/ynwa/Volume/Work/Andela/server/data\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/ynwa/Volume/Work/Andela\",\"filename\":\"/media/ynwa/Volume/Work/Andela/server/data/partySampleData.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/ynwa/Volume/Work/Andela\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/data",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/ynwa/Volume/Work/Andela",
      "filename": "/media/ynwa/Volume/Work/Andela/server/data/partySampleData.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/ynwa/Volume/Work/Andela",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/ynwa/Volume/Work/Andela/server/data/partySampleData.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/media/ynwa/Volume/Work/Andela/server/data/partySampleData.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/data",
        "sourceFileName": "partySampleData.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar parties = [{\n  id: 100,\n  name: 'Democratic',\n  hqAddress: 'Washington, D.C.',\n  logoUrl: 'https://www.stjoedemocrats.org/wp-content/uploads/2017/09/D-Logo-Only-small-300x230.jpg',\n  representative: 'Tom Perez',\n  contact: '+1(000)456-789-123',\n  website: 'https://democrats.org/',\n  created_at: '2019-02-02T18:34:36.284Z'\n}, {\n  id: 200,\n  name: 'Republican',\n  hqAddress: '310 First Street SE',\n  logoUrl: 'https://www.stjoedemocrats.org/wp-content/uploads/2017/09/D-Logo-Only-small-300x230.jpg',\n  representative: 'Ronna McDaniel',\n  contact: '+1(000)456-789-123',\n  website: 'https://www.gop.com/',\n  created_at: '2019-02-02T18:34:36.284Z'\n}, {\n  id: 300,\n  name: 'RPF',\n  hqAddress: 'Kigali',\n  logoUrl: 'http://rpfinkotanyi.rw/fileadmin/templates/img/logo.jpg',\n  representative: 'Paul Kagame',\n  contact: '+1(000)456-789-123',\n  website: 'http://rpfinkotanyi.rw/',\n  created_at: '2019-02-02T18:34:36.284Z'\n}];\nvar _default = parties;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnR5U2FtcGxlRGF0YS5qcyJdLCJuYW1lcyI6WyJwYXJ0aWVzIiwiaWQiLCJuYW1lIiwiaHFBZGRyZXNzIiwibG9nb1VybCIsInJlcHJlc2VudGF0aXZlIiwiY29udGFjdCIsIndlYnNpdGUiLCJjcmVhdGVkX2F0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFNQSxPQUFPLEdBQUcsQ0FBQztBQUNmQyxFQUFBQSxFQUFFLEVBQUUsR0FEVztBQUVmQyxFQUFBQSxJQUFJLEVBQUUsWUFGUztBQUdmQyxFQUFBQSxTQUFTLEVBQUUsa0JBSEk7QUFJZkMsRUFBQUEsT0FBTyxFQUFFLHlGQUpNO0FBS2ZDLEVBQUFBLGNBQWMsRUFBRSxXQUxEO0FBTWZDLEVBQUFBLE9BQU8sRUFBRSxvQkFOTTtBQU9mQyxFQUFBQSxPQUFPLEVBQUUsd0JBUE07QUFRZkMsRUFBQUEsVUFBVSxFQUFFO0FBUkcsQ0FBRCxFQVNiO0FBQ0RQLEVBQUFBLEVBQUUsRUFBRSxHQURIO0FBRURDLEVBQUFBLElBQUksRUFBRSxZQUZMO0FBR0RDLEVBQUFBLFNBQVMsRUFBRSxxQkFIVjtBQUlEQyxFQUFBQSxPQUFPLEVBQUUseUZBSlI7QUFLREMsRUFBQUEsY0FBYyxFQUFFLGdCQUxmO0FBTURDLEVBQUFBLE9BQU8sRUFBRSxvQkFOUjtBQU9EQyxFQUFBQSxPQUFPLEVBQUUsc0JBUFI7QUFRREMsRUFBQUEsVUFBVSxFQUFFO0FBUlgsQ0FUYSxFQWtCYjtBQUNEUCxFQUFBQSxFQUFFLEVBQUUsR0FESDtBQUVEQyxFQUFBQSxJQUFJLEVBQUUsS0FGTDtBQUdEQyxFQUFBQSxTQUFTLEVBQUUsUUFIVjtBQUlEQyxFQUFBQSxPQUFPLEVBQUUseURBSlI7QUFLREMsRUFBQUEsY0FBYyxFQUFFLGFBTGY7QUFNREMsRUFBQUEsT0FBTyxFQUFFLG9CQU5SO0FBT0RDLEVBQUFBLE9BQU8sRUFBRSx5QkFQUjtBQVFEQyxFQUFBQSxVQUFVLEVBQUU7QUFSWCxDQWxCYSxDQUFoQjtlQTZCZVIsTyIsInNvdXJjZVJvb3QiOiIvbWVkaWEveW53YS9Wb2x1bWUvV29yay9BbmRlbGEvc2VydmVyL2RhdGEiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwYXJ0aWVzID0gW3tcbiAgaWQ6IDEwMCxcbiAgbmFtZTogJ0RlbW9jcmF0aWMnLFxuICBocUFkZHJlc3M6ICdXYXNoaW5ndG9uLCBELkMuJyxcbiAgbG9nb1VybDogJ2h0dHBzOi8vd3d3LnN0am9lZGVtb2NyYXRzLm9yZy93cC1jb250ZW50L3VwbG9hZHMvMjAxNy8wOS9ELUxvZ28tT25seS1zbWFsbC0zMDB4MjMwLmpwZycsXG4gIHJlcHJlc2VudGF0aXZlOiAnVG9tIFBlcmV6JyxcbiAgY29udGFjdDogJysxKDAwMCk0NTYtNzg5LTEyMycsXG4gIHdlYnNpdGU6ICdodHRwczovL2RlbW9jcmF0cy5vcmcvJyxcbiAgY3JlYXRlZF9hdDogJzIwMTktMDItMDJUMTg6MzQ6MzYuMjg0WicsXG59LCB7XG4gIGlkOiAyMDAsXG4gIG5hbWU6ICdSZXB1YmxpY2FuJyxcbiAgaHFBZGRyZXNzOiAnMzEwIEZpcnN0IFN0cmVldCBTRScsXG4gIGxvZ29Vcmw6ICdodHRwczovL3d3dy5zdGpvZWRlbW9jcmF0cy5vcmcvd3AtY29udGVudC91cGxvYWRzLzIwMTcvMDkvRC1Mb2dvLU9ubHktc21hbGwtMzAweDIzMC5qcGcnLFxuICByZXByZXNlbnRhdGl2ZTogJ1Jvbm5hIE1jRGFuaWVsJyxcbiAgY29udGFjdDogJysxKDAwMCk0NTYtNzg5LTEyMycsXG4gIHdlYnNpdGU6ICdodHRwczovL3d3dy5nb3AuY29tLycsXG4gIGNyZWF0ZWRfYXQ6ICcyMDE5LTAyLTAyVDE4OjM0OjM2LjI4NFonLFxufSwge1xuICBpZDogMzAwLFxuICBuYW1lOiAnUlBGJyxcbiAgaHFBZGRyZXNzOiAnS2lnYWxpJyxcbiAgbG9nb1VybDogJ2h0dHA6Ly9ycGZpbmtvdGFueWkucncvZmlsZWFkbWluL3RlbXBsYXRlcy9pbWcvbG9nby5qcGcnLFxuICByZXByZXNlbnRhdGl2ZTogJ1BhdWwgS2FnYW1lJyxcbiAgY29udGFjdDogJysxKDAwMCk0NTYtNzg5LTEyMycsXG4gIHdlYnNpdGU6ICdodHRwOi8vcnBmaW5rb3RhbnlpLnJ3LycsXG4gIGNyZWF0ZWRfYXQ6ICcyMDE5LTAyLTAyVDE4OjM0OjM2LjI4NFonLFxufV07XG5cbmV4cG9ydCBkZWZhdWx0IHBhcnRpZXM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "partySampleData.js"
      ],
      "names": [
        "parties",
        "id",
        "name",
        "hqAddress",
        "logoUrl",
        "representative",
        "contact",
        "website",
        "created_at"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,OAAO,GAAG,CAAC;AACfC,EAAAA,EAAE,EAAE,GADW;AAEfC,EAAAA,IAAI,EAAE,YAFS;AAGfC,EAAAA,SAAS,EAAE,kBAHI;AAIfC,EAAAA,OAAO,EAAE,yFAJM;AAKfC,EAAAA,cAAc,EAAE,WALD;AAMfC,EAAAA,OAAO,EAAE,oBANM;AAOfC,EAAAA,OAAO,EAAE,wBAPM;AAQfC,EAAAA,UAAU,EAAE;AARG,CAAD,EASb;AACDP,EAAAA,EAAE,EAAE,GADH;AAEDC,EAAAA,IAAI,EAAE,YAFL;AAGDC,EAAAA,SAAS,EAAE,qBAHV;AAIDC,EAAAA,OAAO,EAAE,yFAJR;AAKDC,EAAAA,cAAc,EAAE,gBALf;AAMDC,EAAAA,OAAO,EAAE,oBANR;AAODC,EAAAA,OAAO,EAAE,sBAPR;AAQDC,EAAAA,UAAU,EAAE;AARX,CATa,EAkBb;AACDP,EAAAA,EAAE,EAAE,GADH;AAEDC,EAAAA,IAAI,EAAE,KAFL;AAGDC,EAAAA,SAAS,EAAE,QAHV;AAIDC,EAAAA,OAAO,EAAE,yDAJR;AAKDC,EAAAA,cAAc,EAAE,aALf;AAMDC,EAAAA,OAAO,EAAE,oBANR;AAODC,EAAAA,OAAO,EAAE,yBAPR;AAQDC,EAAAA,UAAU,EAAE;AARX,CAlBa,CAAhB;eA6BeR,O",
      "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/data",
      "sourcesContent": [
        "const parties = [{\n  id: 100,\n  name: 'Democratic',\n  hqAddress: 'Washington, D.C.',\n  logoUrl: 'https://www.stjoedemocrats.org/wp-content/uploads/2017/09/D-Logo-Only-small-300x230.jpg',\n  representative: 'Tom Perez',\n  contact: '+1(000)456-789-123',\n  website: 'https://democrats.org/',\n  created_at: '2019-02-02T18:34:36.284Z',\n}, {\n  id: 200,\n  name: 'Republican',\n  hqAddress: '310 First Street SE',\n  logoUrl: 'https://www.stjoedemocrats.org/wp-content/uploads/2017/09/D-Logo-Only-small-300x230.jpg',\n  representative: 'Ronna McDaniel',\n  contact: '+1(000)456-789-123',\n  website: 'https://www.gop.com/',\n  created_at: '2019-02-02T18:34:36.284Z',\n}, {\n  id: 300,\n  name: 'RPF',\n  hqAddress: 'Kigali',\n  logoUrl: 'http://rpfinkotanyi.rw/fileadmin/templates/img/logo.jpg',\n  representative: 'Paul Kagame',\n  contact: '+1(000)456-789-123',\n  website: 'http://rpfinkotanyi.rw/',\n  created_at: '2019-02-02T18:34:36.284Z',\n}];\n\nexport default parties;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1549998001991
  },
  "{\"sourceRoot\":\"/media/ynwa/Volume/Work/Andela/server/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/ynwa/Volume/Work/Andela\",\"filename\":\"/media/ynwa/Volume/Work/Andela/server/routes/officeRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/ynwa/Volume/Work/Andela\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/ynwa/Volume/Work/Andela",
      "filename": "/media/ynwa/Volume/Work/Andela/server/routes/officeRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/ynwa/Volume/Work/Andela",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/ynwa/Volume/Work/Andela/server/routes/officeRoute.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/media/ynwa/Volume/Work/Andela/server/routes/officeRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/routes",
        "sourceFileName": "officeRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _officeController = _interopRequireDefault(require(\"../controllers/officeController\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar route = _express.default.Router();\n\nroute.post('/api/v1/offices/', _officeController.default.createPoliticalOffice);\nroute.get('/api/v1/offices/', _officeController.default.getAllPoliticalOffices);\nroute.get('/api/v1/offices/:id', _officeController.default.getSpecificPoliticalOffice);\nvar _default = route;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9mZmljZVJvdXRlLmpzIl0sIm5hbWVzIjpbInJvdXRlIiwiZXhwcmVzcyIsIlJvdXRlciIsInBvc3QiLCJvZmZpY2VDb250cm9sbGVyIiwiY3JlYXRlUG9saXRpY2FsT2ZmaWNlIiwiZ2V0IiwiZ2V0QWxsUG9saXRpY2FsT2ZmaWNlcyIsImdldFNwZWNpZmljUG9saXRpY2FsT2ZmaWNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxLQUFLLEdBQUdDLGlCQUFRQyxNQUFSLEVBQWQ7O0FBRUFGLEtBQUssQ0FBQ0csSUFBTixDQUFXLGtCQUFYLEVBQStCQywwQkFBaUJDLHFCQUFoRDtBQUNBTCxLQUFLLENBQUNNLEdBQU4sQ0FBVSxrQkFBVixFQUE4QkYsMEJBQWlCRyxzQkFBL0M7QUFDQVAsS0FBSyxDQUFDTSxHQUFOLENBQVUscUJBQVYsRUFBaUNGLDBCQUFpQkksMEJBQWxEO2VBRWVSLEsiLCJzb3VyY2VSb290IjoiL21lZGlhL3lud2EvVm9sdW1lL1dvcmsvQW5kZWxhL3NlcnZlci9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBvZmZpY2VDb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL29mZmljZUNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZSA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlLnBvc3QoJy9hcGkvdjEvb2ZmaWNlcy8nLCBvZmZpY2VDb250cm9sbGVyLmNyZWF0ZVBvbGl0aWNhbE9mZmljZSk7XG5yb3V0ZS5nZXQoJy9hcGkvdjEvb2ZmaWNlcy8nLCBvZmZpY2VDb250cm9sbGVyLmdldEFsbFBvbGl0aWNhbE9mZmljZXMpO1xucm91dGUuZ2V0KCcvYXBpL3YxL29mZmljZXMvOmlkJywgb2ZmaWNlQ29udHJvbGxlci5nZXRTcGVjaWZpY1BvbGl0aWNhbE9mZmljZSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "officeRoute.js"
      ],
      "names": [
        "route",
        "express",
        "Router",
        "post",
        "officeController",
        "createPoliticalOffice",
        "get",
        "getAllPoliticalOffices",
        "getSpecificPoliticalOffice"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,KAAK,GAAGC,iBAAQC,MAAR,EAAd;;AAEAF,KAAK,CAACG,IAAN,CAAW,kBAAX,EAA+BC,0BAAiBC,qBAAhD;AACAL,KAAK,CAACM,GAAN,CAAU,kBAAV,EAA8BF,0BAAiBG,sBAA/C;AACAP,KAAK,CAACM,GAAN,CAAU,qBAAV,EAAiCF,0BAAiBI,0BAAlD;eAEeR,K",
      "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/routes",
      "sourcesContent": [
        "import express from 'express';\nimport officeController from '../controllers/officeController';\n\nconst route = express.Router();\n\nroute.post('/api/v1/offices/', officeController.createPoliticalOffice);\nroute.get('/api/v1/offices/', officeController.getAllPoliticalOffices);\nroute.get('/api/v1/offices/:id', officeController.getSpecificPoliticalOffice);\n\nexport default route;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1549998001994
  },
  "{\"sourceRoot\":\"/media/ynwa/Volume/Work/Andela/server/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/ynwa/Volume/Work/Andela\",\"filename\":\"/media/ynwa/Volume/Work/Andela/server/controllers/officeController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/ynwa/Volume/Work/Andela\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/ynwa/Volume/Work/Andela",
      "filename": "/media/ynwa/Volume/Work/Andela/server/controllers/officeController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/ynwa/Volume/Work/Andela",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/ynwa/Volume/Work/Andela/server/controllers/officeController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/media/ynwa/Volume/Work/Andela/server/controllers/officeController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/controllers",
        "sourceFileName": "officeController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _joi = _interopRequireDefault(require(\"joi\"));\n\nvar _officeSampleData = _interopRequireDefault(require(\"../data/officeSampleData\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar PoliticalOffice =\n/*#__PURE__*/\nfunction () {\n  function PoliticalOffice() {\n    _classCallCheck(this, PoliticalOffice);\n  }\n\n  _createClass(PoliticalOffice, null, [{\n    key: \"createPoliticalOffice\",\n    value: function createPoliticalOffice(req, res) {\n      var _req$body = req.body,\n          type = _req$body.type,\n          name = _req$body.name,\n          location = _req$body.location,\n          contact = _req$body.contact;\n\n      var schema = _joi.default.object().keys({\n        type: _joi.default.string().min(3).required(),\n        name: _joi.default.string().min(3).required(),\n        location: _joi.default.string().min(3).max(50).required(),\n        contact: _joi.default.string().regex(/^(07)(\\d{8})/).length(10).required()\n      });\n\n      var validationError = _joi.default.validate(req.body, schema, {\n        abortEarly: false\n      });\n\n      if (validationError.error != null) {\n        var errors = [];\n\n        for (var index = 0; index < validationError.error.details.length; index++) {\n          errors.push(validationError.error.details[index].message.split('\"').join(''));\n        }\n\n        return res.status(400).send({\n          status: res.statusCode,\n          error: errors\n        });\n      }\n\n      var data = {\n        id: parseInt(_officeSampleData.default.length + 1),\n        type: type,\n        name: name,\n        location: location,\n        contact: contact,\n        created_at: new Date()\n      };\n\n      var record = _officeSampleData.default.find(function (item) {\n        return item.contact === contact;\n      });\n\n      if (record != undefined) {\n        return res.status(400).send({\n          status: res.statusCode,\n          error: 'This office is already registered'\n        });\n      }\n\n      _officeSampleData.default.push(data);\n\n      return res.status(201).send({\n        status: res.statusCode,\n        data: [data]\n      });\n    }\n  }, {\n    key: \"getAllPoliticalOffices\",\n    value: function getAllPoliticalOffices(req, res) {\n      return res.status(200).send({\n        status: res.statusCode,\n        data: _officeSampleData.default\n      });\n    }\n  }, {\n    key: \"getSpecificPoliticalOffice\",\n    value: function getSpecificPoliticalOffice(req, res) {\n      var id = req.params.id;\n\n      if (!parseInt(id)) {\n        return res.status(400).send({\n          status: res.statusCode,\n          error: 'ID should be an integer'\n        });\n      }\n\n      var office = _officeSampleData.default.filter(function (item) {\n        return item.id === parseInt(id);\n      });\n\n      if (office === undefined) {\n        return res.status(404).send({\n          status: res.statusCode,\n          error: 'No information found for provided id'\n        });\n      }\n\n      return res.status(200).send({\n        status: res.statusCode,\n        data: office\n      });\n    }\n  }]);\n\n  return PoliticalOffice;\n}();\n\nvar _default = PoliticalOffice;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9mZmljZUNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiUG9saXRpY2FsT2ZmaWNlIiwicmVxIiwicmVzIiwiYm9keSIsInR5cGUiLCJuYW1lIiwibG9jYXRpb24iLCJjb250YWN0Iiwic2NoZW1hIiwiam9pIiwib2JqZWN0Iiwia2V5cyIsInN0cmluZyIsIm1pbiIsInJlcXVpcmVkIiwibWF4IiwicmVnZXgiLCJsZW5ndGgiLCJ2YWxpZGF0aW9uRXJyb3IiLCJ2YWxpZGF0ZSIsImFib3J0RWFybHkiLCJlcnJvciIsImVycm9ycyIsImluZGV4IiwiZGV0YWlscyIsInB1c2giLCJtZXNzYWdlIiwic3BsaXQiLCJqb2luIiwic3RhdHVzIiwic2VuZCIsInN0YXR1c0NvZGUiLCJkYXRhIiwiaWQiLCJwYXJzZUludCIsIm9mZmljZURhdGEiLCJjcmVhdGVkX2F0IiwiRGF0ZSIsInJlY29yZCIsImZpbmQiLCJpdGVtIiwidW5kZWZpbmVkIiwicGFyYW1zIiwib2ZmaWNlIiwiZmlsdGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7SUFFTUEsZTs7Ozs7Ozs7OzBDQUN5QkMsRyxFQUFLQyxHLEVBQUs7QUFBQSxzQkFNakNELEdBQUcsQ0FBQ0UsSUFONkI7QUFBQSxVQUVuQ0MsSUFGbUMsYUFFbkNBLElBRm1DO0FBQUEsVUFHbkNDLElBSG1DLGFBR25DQSxJQUhtQztBQUFBLFVBSW5DQyxRQUptQyxhQUluQ0EsUUFKbUM7QUFBQSxVQUtuQ0MsT0FMbUMsYUFLbkNBLE9BTG1DOztBQVFyQyxVQUFNQyxNQUFNLEdBQUdDLGFBQUlDLE1BQUosR0FBYUMsSUFBYixDQUFrQjtBQUMvQlAsUUFBQUEsSUFBSSxFQUFFSyxhQUFJRyxNQUFKLEdBQWFDLEdBQWIsQ0FBaUIsQ0FBakIsRUFBb0JDLFFBQXBCLEVBRHlCO0FBRS9CVCxRQUFBQSxJQUFJLEVBQUVJLGFBQUlHLE1BQUosR0FBYUMsR0FBYixDQUFpQixDQUFqQixFQUFvQkMsUUFBcEIsRUFGeUI7QUFHL0JSLFFBQUFBLFFBQVEsRUFBRUcsYUFBSUcsTUFBSixHQUFhQyxHQUFiLENBQWlCLENBQWpCLEVBQW9CRSxHQUFwQixDQUF3QixFQUF4QixFQUE0QkQsUUFBNUIsRUFIcUI7QUFJL0JQLFFBQUFBLE9BQU8sRUFBRUUsYUFBSUcsTUFBSixHQUFhSSxLQUFiLENBQW1CLGNBQW5CLEVBQW1DQyxNQUFuQyxDQUEwQyxFQUExQyxFQUE4Q0gsUUFBOUM7QUFKc0IsT0FBbEIsQ0FBZjs7QUFPQSxVQUFNSSxlQUFlLEdBQUdULGFBQUlVLFFBQUosQ0FBYWxCLEdBQUcsQ0FBQ0UsSUFBakIsRUFBdUJLLE1BQXZCLEVBQStCO0FBQ3JEWSxRQUFBQSxVQUFVLEVBQUU7QUFEeUMsT0FBL0IsQ0FBeEI7O0FBSUEsVUFBSUYsZUFBZSxDQUFDRyxLQUFoQixJQUF5QixJQUE3QixFQUFtQztBQUNqQyxZQUFNQyxNQUFNLEdBQUcsRUFBZjs7QUFDQSxhQUFLLElBQUlDLEtBQUssR0FBRyxDQUFqQixFQUFvQkEsS0FBSyxHQUFHTCxlQUFlLENBQUNHLEtBQWhCLENBQXNCRyxPQUF0QixDQUE4QlAsTUFBMUQsRUFBa0VNLEtBQUssRUFBdkUsRUFBMkU7QUFDekVELFVBQUFBLE1BQU0sQ0FBQ0csSUFBUCxDQUFZUCxlQUFlLENBQUNHLEtBQWhCLENBQXNCRyxPQUF0QixDQUE4QkQsS0FBOUIsRUFBcUNHLE9BQXJDLENBQTZDQyxLQUE3QyxDQUFtRCxHQUFuRCxFQUF3REMsSUFBeEQsQ0FBNkQsRUFBN0QsQ0FBWjtBQUNEOztBQUVELGVBQU8xQixHQUFHLENBQUMyQixNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJELFVBQUFBLE1BQU0sRUFBRTNCLEdBQUcsQ0FBQzZCLFVBRGM7QUFFMUJWLFVBQUFBLEtBQUssRUFBRUM7QUFGbUIsU0FBckIsQ0FBUDtBQUlEOztBQUVELFVBQU1VLElBQUksR0FBRztBQUNYQyxRQUFBQSxFQUFFLEVBQUVDLFFBQVEsQ0FBQ0MsMEJBQVdsQixNQUFYLEdBQW9CLENBQXJCLENBREQ7QUFFWGIsUUFBQUEsSUFBSSxFQUFKQSxJQUZXO0FBR1hDLFFBQUFBLElBQUksRUFBSkEsSUFIVztBQUlYQyxRQUFBQSxRQUFRLEVBQVJBLFFBSlc7QUFLWEMsUUFBQUEsT0FBTyxFQUFQQSxPQUxXO0FBTVg2QixRQUFBQSxVQUFVLEVBQUUsSUFBSUMsSUFBSjtBQU5ELE9BQWI7O0FBU0EsVUFBTUMsTUFBTSxHQUFHSCwwQkFBV0ksSUFBWCxDQUFnQixVQUFBQyxJQUFJO0FBQUEsZUFBSUEsSUFBSSxDQUFDakMsT0FBTCxLQUFpQkEsT0FBckI7QUFBQSxPQUFwQixDQUFmOztBQUNBLFVBQUkrQixNQUFNLElBQUlHLFNBQWQsRUFBeUI7QUFDdkIsZUFBT3ZDLEdBQUcsQ0FBQzJCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMxQkQsVUFBQUEsTUFBTSxFQUFFM0IsR0FBRyxDQUFDNkIsVUFEYztBQUUxQlYsVUFBQUEsS0FBSyxFQUFFO0FBRm1CLFNBQXJCLENBQVA7QUFJRDs7QUFHRGMsZ0NBQVdWLElBQVgsQ0FBZ0JPLElBQWhCOztBQUNBLGFBQU85QixHQUFHLENBQUMyQixNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJELFFBQUFBLE1BQU0sRUFBRTNCLEdBQUcsQ0FBQzZCLFVBRGM7QUFFMUJDLFFBQUFBLElBQUksRUFBRSxDQUFDQSxJQUFEO0FBRm9CLE9BQXJCLENBQVA7QUFJRDs7OzJDQUU2Qi9CLEcsRUFBS0MsRyxFQUFLO0FBQ3RDLGFBQU9BLEdBQUcsQ0FBQzJCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMxQkQsUUFBQUEsTUFBTSxFQUFFM0IsR0FBRyxDQUFDNkIsVUFEYztBQUUxQkMsUUFBQUEsSUFBSSxFQUFFRztBQUZvQixPQUFyQixDQUFQO0FBSUQ7OzsrQ0FFaUNsQyxHLEVBQUtDLEcsRUFBSztBQUFBLFVBQ2xDK0IsRUFEa0MsR0FDM0JoQyxHQUFHLENBQUN5QyxNQUR1QixDQUNsQ1QsRUFEa0M7O0FBRzFDLFVBQUksQ0FBQ0MsUUFBUSxDQUFDRCxFQUFELENBQWIsRUFBbUI7QUFDakIsZUFBTy9CLEdBQUcsQ0FBQzJCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMxQkQsVUFBQUEsTUFBTSxFQUFFM0IsR0FBRyxDQUFDNkIsVUFEYztBQUUxQlYsVUFBQUEsS0FBSyxFQUFFO0FBRm1CLFNBQXJCLENBQVA7QUFJRDs7QUFFRCxVQUFNc0IsTUFBTSxHQUFHUiwwQkFBV1MsTUFBWCxDQUFrQixVQUFBSixJQUFJO0FBQUEsZUFBSUEsSUFBSSxDQUFDUCxFQUFMLEtBQVlDLFFBQVEsQ0FBQ0QsRUFBRCxDQUF4QjtBQUFBLE9BQXRCLENBQWY7O0FBRUEsVUFBSVUsTUFBTSxLQUFLRixTQUFmLEVBQTBCO0FBQ3hCLGVBQU92QyxHQUFHLENBQUMyQixNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJELFVBQUFBLE1BQU0sRUFBRTNCLEdBQUcsQ0FBQzZCLFVBRGM7QUFFMUJWLFVBQUFBLEtBQUssRUFBRTtBQUZtQixTQUFyQixDQUFQO0FBSUQ7O0FBRUQsYUFBT25CLEdBQUcsQ0FBQzJCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMxQkQsUUFBQUEsTUFBTSxFQUFFM0IsR0FBRyxDQUFDNkIsVUFEYztBQUUxQkMsUUFBQUEsSUFBSSxFQUFFVztBQUZvQixPQUFyQixDQUFQO0FBSUQ7Ozs7OztlQUdZM0MsZSIsInNvdXJjZVJvb3QiOiIvbWVkaWEveW53YS9Wb2x1bWUvV29yay9BbmRlbGEvc2VydmVyL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGpvaSBmcm9tICdqb2knO1xuaW1wb3J0IG9mZmljZURhdGEgZnJvbSAnLi4vZGF0YS9vZmZpY2VTYW1wbGVEYXRhJztcblxuY2xhc3MgUG9saXRpY2FsT2ZmaWNlIHtcbiAgc3RhdGljIGNyZWF0ZVBvbGl0aWNhbE9mZmljZShyZXEsIHJlcykge1xuICAgIGNvbnN0IHtcbiAgICAgIHR5cGUsXG4gICAgICBuYW1lLFxuICAgICAgbG9jYXRpb24sXG4gICAgICBjb250YWN0LFxuICAgIH0gPSByZXEuYm9keTtcblxuICAgIGNvbnN0IHNjaGVtYSA9IGpvaS5vYmplY3QoKS5rZXlzKHtcbiAgICAgIHR5cGU6IGpvaS5zdHJpbmcoKS5taW4oMykucmVxdWlyZWQoKSxcbiAgICAgIG5hbWU6IGpvaS5zdHJpbmcoKS5taW4oMykucmVxdWlyZWQoKSxcbiAgICAgIGxvY2F0aW9uOiBqb2kuc3RyaW5nKCkubWluKDMpLm1heCg1MCkucmVxdWlyZWQoKSxcbiAgICAgIGNvbnRhY3Q6IGpvaS5zdHJpbmcoKS5yZWdleCgvXigwNykoXFxkezh9KS8pLmxlbmd0aCgxMCkucmVxdWlyZWQoKSxcbiAgICB9KTtcblxuICAgIGNvbnN0IHZhbGlkYXRpb25FcnJvciA9IGpvaS52YWxpZGF0ZShyZXEuYm9keSwgc2NoZW1hLCB7XG4gICAgICBhYm9ydEVhcmx5OiBmYWxzZSxcbiAgICB9KTtcblxuICAgIGlmICh2YWxpZGF0aW9uRXJyb3IuZXJyb3IgIT0gbnVsbCkge1xuICAgICAgY29uc3QgZXJyb3JzID0gW107XG4gICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdmFsaWRhdGlvbkVycm9yLmVycm9yLmRldGFpbHMubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKHZhbGlkYXRpb25FcnJvci5lcnJvci5kZXRhaWxzW2luZGV4XS5tZXNzYWdlLnNwbGl0KCdcIicpLmpvaW4oJycpKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHtcbiAgICAgICAgc3RhdHVzOiByZXMuc3RhdHVzQ29kZSxcbiAgICAgICAgZXJyb3I6IGVycm9ycyxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IGRhdGEgPSB7XG4gICAgICBpZDogcGFyc2VJbnQob2ZmaWNlRGF0YS5sZW5ndGggKyAxKSxcbiAgICAgIHR5cGUsXG4gICAgICBuYW1lLFxuICAgICAgbG9jYXRpb24sXG4gICAgICBjb250YWN0LFxuICAgICAgY3JlYXRlZF9hdDogbmV3IERhdGUoKSxcbiAgICB9O1xuXG4gICAgY29uc3QgcmVjb3JkID0gb2ZmaWNlRGF0YS5maW5kKGl0ZW0gPT4gaXRlbS5jb250YWN0ID09PSBjb250YWN0KTtcbiAgICBpZiAocmVjb3JkICE9IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHtcbiAgICAgICAgc3RhdHVzOiByZXMuc3RhdHVzQ29kZSxcbiAgICAgICAgZXJyb3I6ICdUaGlzIG9mZmljZSBpcyBhbHJlYWR5IHJlZ2lzdGVyZWQnLFxuICAgICAgfSk7XG4gICAgfVxuXG5cbiAgICBvZmZpY2VEYXRhLnB1c2goZGF0YSk7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAxKS5zZW5kKHtcbiAgICAgIHN0YXR1czogcmVzLnN0YXR1c0NvZGUsXG4gICAgICBkYXRhOiBbZGF0YV0sXG4gICAgfSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0QWxsUG9saXRpY2FsT2ZmaWNlcyhyZXEsIHJlcykge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZCh7XG4gICAgICBzdGF0dXM6IHJlcy5zdGF0dXNDb2RlLFxuICAgICAgZGF0YTogb2ZmaWNlRGF0YSxcbiAgICB9KTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRTcGVjaWZpY1BvbGl0aWNhbE9mZmljZShyZXEsIHJlcykge1xuICAgIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XG5cbiAgICBpZiAoIXBhcnNlSW50KGlkKSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHtcbiAgICAgICAgc3RhdHVzOiByZXMuc3RhdHVzQ29kZSxcbiAgICAgICAgZXJyb3I6ICdJRCBzaG91bGQgYmUgYW4gaW50ZWdlcicsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBvZmZpY2UgPSBvZmZpY2VEYXRhLmZpbHRlcihpdGVtID0+IGl0ZW0uaWQgPT09IHBhcnNlSW50KGlkKSk7XG5cbiAgICBpZiAob2ZmaWNlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuc2VuZCh7XG4gICAgICAgIHN0YXR1czogcmVzLnN0YXR1c0NvZGUsXG4gICAgICAgIGVycm9yOiAnTm8gaW5mb3JtYXRpb24gZm91bmQgZm9yIHByb3ZpZGVkIGlkJyxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZCh7XG4gICAgICBzdGF0dXM6IHJlcy5zdGF0dXNDb2RlLFxuICAgICAgZGF0YTogb2ZmaWNlLFxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBvbGl0aWNhbE9mZmljZTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "officeController.js"
      ],
      "names": [
        "PoliticalOffice",
        "req",
        "res",
        "body",
        "type",
        "name",
        "location",
        "contact",
        "schema",
        "joi",
        "object",
        "keys",
        "string",
        "min",
        "required",
        "max",
        "regex",
        "length",
        "validationError",
        "validate",
        "abortEarly",
        "error",
        "errors",
        "index",
        "details",
        "push",
        "message",
        "split",
        "join",
        "status",
        "send",
        "statusCode",
        "data",
        "id",
        "parseInt",
        "officeData",
        "created_at",
        "Date",
        "record",
        "find",
        "item",
        "undefined",
        "params",
        "office",
        "filter"
      ],
      "mappings": "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",
      "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/controllers",
      "sourcesContent": [
        "import joi from 'joi';\nimport officeData from '../data/officeSampleData';\n\nclass PoliticalOffice {\n  static createPoliticalOffice(req, res) {\n    const {\n      type,\n      name,\n      location,\n      contact,\n    } = req.body;\n\n    const schema = joi.object().keys({\n      type: joi.string().min(3).required(),\n      name: joi.string().min(3).required(),\n      location: joi.string().min(3).max(50).required(),\n      contact: joi.string().regex(/^(07)(\\d{8})/).length(10).required(),\n    });\n\n    const validationError = joi.validate(req.body, schema, {\n      abortEarly: false,\n    });\n\n    if (validationError.error != null) {\n      const errors = [];\n      for (let index = 0; index < validationError.error.details.length; index++) {\n        errors.push(validationError.error.details[index].message.split('\"').join(''));\n      }\n\n      return res.status(400).send({\n        status: res.statusCode,\n        error: errors,\n      });\n    }\n\n    const data = {\n      id: parseInt(officeData.length + 1),\n      type,\n      name,\n      location,\n      contact,\n      created_at: new Date(),\n    };\n\n    const record = officeData.find(item => item.contact === contact);\n    if (record != undefined) {\n      return res.status(400).send({\n        status: res.statusCode,\n        error: 'This office is already registered',\n      });\n    }\n\n\n    officeData.push(data);\n    return res.status(201).send({\n      status: res.statusCode,\n      data: [data],\n    });\n  }\n\n  static getAllPoliticalOffices(req, res) {\n    return res.status(200).send({\n      status: res.statusCode,\n      data: officeData,\n    });\n  }\n\n  static getSpecificPoliticalOffice(req, res) {\n    const { id } = req.params;\n\n    if (!parseInt(id)) {\n      return res.status(400).send({\n        status: res.statusCode,\n        error: 'ID should be an integer',\n      });\n    }\n\n    const office = officeData.filter(item => item.id === parseInt(id));\n\n    if (office === undefined) {\n      return res.status(404).send({\n        status: res.statusCode,\n        error: 'No information found for provided id',\n      });\n    }\n\n    return res.status(200).send({\n      status: res.statusCode,\n      data: office,\n    });\n  }\n}\n\nexport default PoliticalOffice;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550057383240
  },
  "{\"sourceRoot\":\"/media/ynwa/Volume/Work/Andela/server/data\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/ynwa/Volume/Work/Andela\",\"filename\":\"/media/ynwa/Volume/Work/Andela/server/data/officeSampleData.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/ynwa/Volume/Work/Andela\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/data",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/ynwa/Volume/Work/Andela",
      "filename": "/media/ynwa/Volume/Work/Andela/server/data/officeSampleData.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/ynwa/Volume/Work/Andela",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/ynwa/Volume/Work/Andela/server/data/officeSampleData.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/media/ynwa/Volume/Work/Andela/server/data/officeSampleData.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/data",
        "sourceFileName": "officeSampleData.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar offices = [{\n  id: 1,\n  type: 'Fedelal',\n  name: 'RRA',\n  location: 'Kiyovu',\n  contact: '+1(000)456-789-123',\n  created_at: '2019-02-02T18:34:36.284Z'\n}, {\n  id: 2,\n  type: 'Legislative',\n  name: 'MINIJUST',\n  location: 'Gishushu',\n  contact: '+1(000)456-789-123',\n  created_at: '2019-02-02T18:34:36.284Z'\n}, {\n  id: 3,\n  type: 'Local Government',\n  name: 'Nyarugenge Sector',\n  location: 'Nyarugenge',\n  contact: '+1(000)456-789-123',\n  created_at: '2019-02-02T18:34:36.284Z'\n}];\nvar _default = offices;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9mZmljZVNhbXBsZURhdGEuanMiXSwibmFtZXMiOlsib2ZmaWNlcyIsImlkIiwidHlwZSIsIm5hbWUiLCJsb2NhdGlvbiIsImNvbnRhY3QiLCJjcmVhdGVkX2F0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFNQSxPQUFPLEdBQUcsQ0FBQztBQUNmQyxFQUFBQSxFQUFFLEVBQUUsQ0FEVztBQUVmQyxFQUFBQSxJQUFJLEVBQUUsU0FGUztBQUdmQyxFQUFBQSxJQUFJLEVBQUUsS0FIUztBQUlmQyxFQUFBQSxRQUFRLEVBQUUsUUFKSztBQUtmQyxFQUFBQSxPQUFPLEVBQUUsb0JBTE07QUFNZkMsRUFBQUEsVUFBVSxFQUFFO0FBTkcsQ0FBRCxFQU9iO0FBQ0RMLEVBQUFBLEVBQUUsRUFBRSxDQURIO0FBRURDLEVBQUFBLElBQUksRUFBRSxhQUZMO0FBR0RDLEVBQUFBLElBQUksRUFBRSxVQUhMO0FBSURDLEVBQUFBLFFBQVEsRUFBRSxVQUpUO0FBS0RDLEVBQUFBLE9BQU8sRUFBRSxvQkFMUjtBQU1EQyxFQUFBQSxVQUFVLEVBQUU7QUFOWCxDQVBhLEVBY2I7QUFDREwsRUFBQUEsRUFBRSxFQUFFLENBREg7QUFFREMsRUFBQUEsSUFBSSxFQUFFLGtCQUZMO0FBR0RDLEVBQUFBLElBQUksRUFBRSxtQkFITDtBQUlEQyxFQUFBQSxRQUFRLEVBQUUsWUFKVDtBQUtEQyxFQUFBQSxPQUFPLEVBQUUsb0JBTFI7QUFNREMsRUFBQUEsVUFBVSxFQUFFO0FBTlgsQ0FkYSxDQUFoQjtlQXVCZU4sTyIsInNvdXJjZVJvb3QiOiIvbWVkaWEveW53YS9Wb2x1bWUvV29yay9BbmRlbGEvc2VydmVyL2RhdGEiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBvZmZpY2VzID0gW3tcbiAgaWQ6IDEsXG4gIHR5cGU6ICdGZWRlbGFsJyxcbiAgbmFtZTogJ1JSQScsXG4gIGxvY2F0aW9uOiAnS2l5b3Z1JyxcbiAgY29udGFjdDogJysxKDAwMCk0NTYtNzg5LTEyMycsXG4gIGNyZWF0ZWRfYXQ6ICcyMDE5LTAyLTAyVDE4OjM0OjM2LjI4NFonLFxufSwge1xuICBpZDogMixcbiAgdHlwZTogJ0xlZ2lzbGF0aXZlJyxcbiAgbmFtZTogJ01JTklKVVNUJyxcbiAgbG9jYXRpb246ICdHaXNodXNodScsXG4gIGNvbnRhY3Q6ICcrMSgwMDApNDU2LTc4OS0xMjMnLFxuICBjcmVhdGVkX2F0OiAnMjAxOS0wMi0wMlQxODozNDozNi4yODRaJyxcbn0sIHtcbiAgaWQ6IDMsXG4gIHR5cGU6ICdMb2NhbCBHb3Zlcm5tZW50JyxcbiAgbmFtZTogJ055YXJ1Z2VuZ2UgU2VjdG9yJyxcbiAgbG9jYXRpb246ICdOeWFydWdlbmdlJyxcbiAgY29udGFjdDogJysxKDAwMCk0NTYtNzg5LTEyMycsXG4gIGNyZWF0ZWRfYXQ6ICcyMDE5LTAyLTAyVDE4OjM0OjM2LjI4NFonLFxufV07XG5cbmV4cG9ydCBkZWZhdWx0IG9mZmljZXM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "officeSampleData.js"
      ],
      "names": [
        "offices",
        "id",
        "type",
        "name",
        "location",
        "contact",
        "created_at"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,OAAO,GAAG,CAAC;AACfC,EAAAA,EAAE,EAAE,CADW;AAEfC,EAAAA,IAAI,EAAE,SAFS;AAGfC,EAAAA,IAAI,EAAE,KAHS;AAIfC,EAAAA,QAAQ,EAAE,QAJK;AAKfC,EAAAA,OAAO,EAAE,oBALM;AAMfC,EAAAA,UAAU,EAAE;AANG,CAAD,EAOb;AACDL,EAAAA,EAAE,EAAE,CADH;AAEDC,EAAAA,IAAI,EAAE,aAFL;AAGDC,EAAAA,IAAI,EAAE,UAHL;AAIDC,EAAAA,QAAQ,EAAE,UAJT;AAKDC,EAAAA,OAAO,EAAE,oBALR;AAMDC,EAAAA,UAAU,EAAE;AANX,CAPa,EAcb;AACDL,EAAAA,EAAE,EAAE,CADH;AAEDC,EAAAA,IAAI,EAAE,kBAFL;AAGDC,EAAAA,IAAI,EAAE,mBAHL;AAIDC,EAAAA,QAAQ,EAAE,YAJT;AAKDC,EAAAA,OAAO,EAAE,oBALR;AAMDC,EAAAA,UAAU,EAAE;AANX,CAda,CAAhB;eAuBeN,O",
      "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/data",
      "sourcesContent": [
        "const offices = [{\n  id: 1,\n  type: 'Fedelal',\n  name: 'RRA',\n  location: 'Kiyovu',\n  contact: '+1(000)456-789-123',\n  created_at: '2019-02-02T18:34:36.284Z',\n}, {\n  id: 2,\n  type: 'Legislative',\n  name: 'MINIJUST',\n  location: 'Gishushu',\n  contact: '+1(000)456-789-123',\n  created_at: '2019-02-02T18:34:36.284Z',\n}, {\n  id: 3,\n  type: 'Local Government',\n  name: 'Nyarugenge Sector',\n  location: 'Nyarugenge',\n  contact: '+1(000)456-789-123',\n  created_at: '2019-02-02T18:34:36.284Z',\n}];\n\nexport default offices;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1549998001989
  },
  "{\"sourceRoot\":\"/media/ynwa/Volume/Work/Andela/server/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/ynwa/Volume/Work/Andela\",\"filename\":\"/media/ynwa/Volume/Work/Andela/server/routes/staticRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/ynwa/Volume/Work/Andela\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/ynwa/Volume/Work/Andela",
      "filename": "/media/ynwa/Volume/Work/Andela/server/routes/staticRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/ynwa/Volume/Work/Andela",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/ynwa/Volume/Work/Andela/server/routes/staticRoute.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/media/ynwa/Volume/Work/Andela/server/routes/staticRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/routes",
        "sourceFileName": "staticRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express.default.Router();\n\nrouter.get('/', function (req, res) {\n  res.sendFile(_path.default.join(__dirname, '.../UI/'));\n});\nvar _default = router;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRpY1JvdXRlLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kRmlsZSIsInBhdGgiLCJqb2luIiwiX19kaXJuYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLGlCQUFRQyxNQUFSLEVBQWY7O0FBRUFGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDNUJBLEVBQUFBLEdBQUcsQ0FBQ0MsUUFBSixDQUFhQyxjQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsU0FBckIsQ0FBYjtBQUNELENBRkQ7ZUFJZVQsTSIsInNvdXJjZVJvb3QiOiIvbWVkaWEveW53YS9Wb2x1bWUvV29yay9BbmRlbGEvc2VydmVyL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLnNlbmRGaWxlKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi4vVUkvJykpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "staticRoute.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "get",
        "req",
        "res",
        "sendFile",
        "path",
        "join",
        "__dirname"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;AAEAF,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5BA,EAAAA,GAAG,CAACC,QAAJ,CAAaC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,SAArB,CAAb;AACD,CAFD;eAIeT,M",
      "sourceRoot": "/media/ynwa/Volume/Work/Andela/server/routes",
      "sourcesContent": [
        "import express from 'express';\nimport path from 'path';\n\nconst router = express.Router();\n\nrouter.get('/', (req, res) => {\n  res.sendFile(path.join(__dirname, '.../UI/'));\n});\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1549993326124
  }
}